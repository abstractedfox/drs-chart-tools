chart seq ver 9

some reference charts:
    -songs with weird time signatures:
        -Afterimage d'automne (00161)
        -最小三倍完全数 (00157)
    -songs with videos:
        -ここからよろしく大作戦143(00263)
    -seq ver 9 with no background:
        -x-ray binary (00246)

some questions to ask:
- if we compare 1a to 2a, how do we see it differentiating players now? is it the same?
-we see <tick> tags in numerous places which contain zeroes. does the engine alternatively support ticks instead of other time values?

<data>
    <seq_version>
        -observed values: 9 (the version concerned here), 8, 3 (not used anywhere in current data)
    <info>
        <time_unit>
            -seems to almost always be 480
                -we should check that nostalgia song and see if its is divisible by 3 (nope, it also uses 480!)
            -it seems likely that this is the <tick> tag from seq ver 8
            -based on observations of a few charts (see below) this value seems to always equal the number of ticks elapsed by a whole beat, so our running assumption will be that this sets that value
            -it also seems like this set to 480 even on songs that have unusual time signatures
        <end_tick> __type="s32">
            -seems to indicate the tick upon which the chart is over
            -however in practice, this seems to have no effect, the chart appears to end on the last step no matter what this is set to
        <bpm_info>
            <bpm>
                <tick>
                    -observed values:
                        -0 (00263_1a)
                <bpm>
                    -values observed are a 5 digit integer where the last 2 digits appear to be tenths and hundreths
        <measure_info>
            <measure> (can be multiple)
                <tick>
                    -indicates the tick at which the time signature defined here begins
                    -first one is always at 0
                <num>
                    -time signature numerator
                    -observed values:
                        -6 (00161_1a)
                        -5 (00157_1a)
                        -4 (00263_1a)
                <denomi>
                    -time signature denominator
                    -observed values:
                        -4 (00263_1a, 00161_1a)
    <sequence_data>
        <step>
            <start_tick __type="s32">
                -most likely indicating number of 'tick's since the beginning of the song where this note appears. seems to replace <stime_ms> from seq ver 8
            <end_tick __type="s32">
                -most likely indicating number of 'tick's this step should last. seems to replace <etime_ms>
                -indicates the length of a hold note or shuffle pattern if it's later than start_tick. for single notes, it's always the same as start_tick
            <left_pos>
            <right_pos>
                -left_pos and right_pos are renamed pos_left and pos_right (why) and appear to indicate the width of a note. range is 0-65536
            <kind>
                -known values:
                    -1 left foot step
                    -2 right foot step
                    -3 down
                    -4 jump
            <player_id>
                -known values: 0, 1, 4
                -0 and 1 indicate players 1 and 2 respectively, with '1' only used in two player charts.
                -4 appears to only and always be used for jumps and downs
                -interesting that 2 and 3 were left unused, wonder if that's a vestige from otoiroha
            <long_point>
                -no longer optional, however, for single notes, it is written as <long_point/> to close it immediately
                -terminating behavior (behavior that ends a hold note) is observed to be:
                    -a hold will end on its own at the <tick> time of the last <point> in this tag
                    -a hold will terminate into a 'swipe' if left_end_pos and right_end_pos are defined
                -for clarity: 'swipe' notes are not unique notes in of themselves, they are part of a hold
                <point> (many)
                    <tick>
                        -seemingly same behavior as <point> in seq ver 8's <long_point>, indicates the time (now in ticks) at which a hold segment ends in its terminating behavior

                    <left_pos>
                    <right_pos>
                        -in the first <point> in <long_point>, these appear to always be the same coordinates as the parent <step>'s left and right pos
                        -if the <point> before this <point> was a swipe, these are identical to the coordinates of the last <point>'s end_pos tags
                        -in subsequent points, these indicate a position for the 'hold' to move to, creating a slide
                            -in other words, a slide is defined by:
                                -an initial <point> (point A) in <long_point> where its <tick> indicates the time at which the first hold segment terminates, and the slide starts
                                -a next <point> (point B) where its <tick> indicates the time at which the slide segment ends, and its position coordinates indicating the position where it ends
                        -unclear what happens if any of the apparent coordinate conventions (ie the first <point> having the same coordinates as its parent <step>) are broken

                    <left_end_pos> (optional)
                    <right_end_pos> (optional)
                        -if these are defined, this <point>'s <tick> will indicate the position at which to terminate the current hold segment with a 'swipe'
                        -these define the coordinates of the swipe note
                        -it seems to be conventional for the difference of these two tags to be the same as the size of the parent <step> (the difference of its right and left pos)
                        -(assumed based on behavior observed in seq ver 8) if there are no more <point> tags after this one, the hold terminates after this swipe
    <extend_data>
        -it looks like this replaced <upbeat_data> from ver 8
        <extend>
            <type __type="str">
                observed values:
                    -Vfx
            <tick __type="s32">
            <param>
                <time __type="s32">
                    -this value appears to increase as we look at <extend> tags down the chart, so it likely counts from chart start (but what unit is this, ticks? seconds?)
                    -this is also observed (in 00263_1a) to often be less than the parent <extend> tag's tick value
                <kind __type="str">
                    observed values:
                        -Background
                            -seems like this one is always used when the layer_name is sp3_led_*
                        -OverEffect
                            -in at least 00263_1a this one is only used where layer_name == sp3_eff*
                <layer_name __type="str">
                    -this appears to take values that used to appear in <upbeat_data><upbeat><name> (see seq ver 8 for more on those)
                <id __type="s32">
                    observed values: 9, 2, 1, 4, 11, 10, 3, 5
                <lane __type="s32">
                    observed values: 0, 1, 3
                <speed __type="s32">
                    observed values: 4, 2
                    in seq ver 8, the speed tag in <upbeat_data><upbeat> was three digits (200, 400), did this value become less granular?
                <color>
                    <red>
                    <green>
                    <blue>
                        -these are all s32 but the values seem to be 8bit ints (0-255)
    <rec_data>
        <clip> (seems like it only appears once)
            <start_time>
            <end_time>
                -in at least 00246_1a, this is set to a lower number than the chart's end_tick
            -my guess is that these are expressed in ticks
        <effect> (can be multiple)
            <tick>
            <time>
                -my guess is that this is the duration of the effect
            <command __type="str">
                -This is a range of values that seem to all start with "N" and have six letters (all the others seem to always be lowercase). searching for these doesn't turn anything up, so they seem to be original to dancerush. there is also a lot of variance in these values. perhaps each letter represents an individual effect and they are mixed at runtime?

observations:
tick timing:
    -when we look at ここからよろしくだいさくせん１４３ on youtube, there are eight beats (that we can hear) before the first note (starts on the 1st beat of the 3rd measure). this note starts at tick 5760 and the song has a time_unit of 480 and bpm of 18400.
    -let's get some more observations like this actually, maybe with songs that have less weird beginnings
        -vamos a bailar - bpm 13800, time_unit 480, first note 1920. in game, the first note appears to be on the first beat of the second measure (indicating 480 ticks per beat)
            -actually the first four notes (technically first 8 but two of them are jumps consisting of two notes each) are all on fourths and are all 480 apart from each other so this seems to really suggest that time_unit is the number of ticks that a single beat will consist of
        -Afterimage d'automne - bpm 23200, time_unit 480, first note at 2880
            -i want to note that the first audible measure here (beginning on the 1st note of the chart) has steps on the 1st and 4th beats and the second measure has a note on each beat
            -furthermore, the difference between these notes is three units of 480, which tracks
            -and further furthermore, each of the six notes in the next measure are 480 ticks apart
    -based on these observations, it seems that the value indicated by <info><time_unit> is equal to the number of ticks elapsed in a single beat

things to specifically seek out:
    -songs that have videos, how do they work?
    -songs that otherwise have unique backgrounds (see vamos a bailar) how do they work?
        -furthermore, let's collect some songs i notice that have non-default backgrounds (we are assuming the disco ball is the default) in case we need to compare them more deeply later
            -CONNECT (has the hexagon background)
    -unique color schemes (such as for spark festival) are probably not set by the chart, but how they are they set
    -some songs (like ここからよろしく大作戦143 so uh lol maybe we should have made sure the random song we picked didn't demonstrate outlier behavior before we analyzed it) have a differently designed gameplay screen, is this implicit to songs with background videos or is it set separately in the chart?

questions:
    -<bpm> tags have a <tick> value the same way <measure> tags do. can we define more than one if a song changes bpm?

assumptions to test/verify/disprove:
    -the game calculates timing based on the given bpm, and the value defined in time_unit is used to represent either a single beat or a full measure (need to test)
        -test: if we make a chart that is 60bpm, set tick to 480, and put a note every 480 ticks, there willbe one note every second
        -test: if we change time_unit of an existing chart to twice its value, the chart should play twice as fast
